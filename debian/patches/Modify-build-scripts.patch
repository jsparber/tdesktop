Description: Eliminate static linking and fixes build
Author: Nicholas Guriev <guriev-ns@ya.ru>
Last-Update: 2017-12-30

--- a/Telegram/Resources/qrc/telegram_linux.qrc
+++ b/Telegram/Resources/qrc/telegram_linux.qrc
@@ -1,5 +1,4 @@
 <RCC>
   <qresource prefix="/qt">
-    <file alias="etc/qt.conf">../etc/qt_linux.conf</file>
   </qresource>
 </RCC>
--- a/Telegram/SourceFiles/base/tests_main.cpp
+++ b/Telegram/SourceFiles/base/tests_main.cpp
@@ -7,7 +7,6 @@ https://github.com/telegramdesktop/tdesk
 */
 #define CATCH_CONFIG_RUNNER
 #include "catch.hpp"
-#include "reporters/catch_reporter_compact.hpp"
 #include <QFile>
 
 namespace base {
--- a/Telegram/SourceFiles/config.h
+++ b/Telegram/SourceFiles/config.h
@@ -202,7 +202,7 @@
 #endif
 
 #if Q_BYTE_ORDER == Q_BIG_ENDIAN
-#error "Only little endian is supported!"
+#warning "Be aware, only little endian is supported!"
 #endif // Q_BYTE_ORDER == Q_BIG_ENDIAN
 
 #ifndef BETA_VERSION_MACRO
--- a/Telegram/SourceFiles/core/basic_types.h
+++ b/Telegram/SourceFiles/core/basic_types.h
@@ -14,7 +14,6 @@ https://github.com/telegramdesktop/tdesk
 #include <functional>
 #include <gsl/gsl>
 
-#include "base/build_config.h"
 #include "base/ordered_set.h"
 #include "base/unique_function.h"
 #include "base/functors.h"
@@ -44,3 +43,17 @@ using TimeId = int32;
 
 #define qsl(s) QStringLiteral(s)
 #define qstr(s) QLatin1String((s), sizeof(s) - 1)
+
+#if defined(__GNUC__) || defined(__clang__)
+#define WARN_UNUSED_RESULT __attribute__((warn_unused_result))
+#else
+#define WARN_UNUSED_RESULT
+#endif
+
+#if defined(__GNUC__)
+#define FORCE_INLINE inline __attribute__((always_inline))
+#elif defined(_MSC_VER)
+#define FORCE_INLINE __forceinline
+#else
+#define FORCE_INLINE inline
+#endif
--- a/Telegram/SourceFiles/main.cpp
+++ b/Telegram/SourceFiles/main.cpp
@@ -8,6 +8,9 @@ https://github.com/telegramdesktop/tdesk
 #include "core/launcher.h"
 
 int main(int argc, char *argv[]) {
+	// Telegram doesn't start when extraordinary theme is set, see launchpad.net/bugs/1680943
+	unsetenv("QT_QPA_PLATFORMTHEME");
+
 	const auto launcher = Core::Launcher::Create(argc, argv);
 	return launcher ? launcher->exec() : 1;
 }
--- a/Telegram/SourceFiles/platform/linux/linux_libs.h
+++ b/Telegram/SourceFiles/platform/linux/linux_libs.h
@@ -17,7 +17,7 @@ extern "C" {
 } // extern "C"
 
 #ifndef TDESKTOP_DISABLE_UNITY_INTEGRATION
-#include <unity/unity/unity.h>
+typedef void UnityLauncherEntry;
 #endif // !TDESKTOP_DISABLE_UNITY_INTEGRATION
 #endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
--- a/Telegram/SourceFiles/rpl/details/callable.h
+++ b/Telegram/SourceFiles/rpl/details/callable.h
@@ -7,7 +7,6 @@ https://github.com/telegramdesktop/tdesk
 */
 #pragma once
 
-#include "base/build_config.h"
 #include <tuple>
 
 namespace rpl {
--- a/Telegram/SourceFiles/ui/animation.h
+++ b/Telegram/SourceFiles/ui/animation.h
@@ -168,9 +168,10 @@ FORCE_INLINE int interpolate(int a, int
 	return qRound(a + float64(b - a) * b_ratio);
 }
 
-#ifdef ARCH_CPU_32_BITS
+#if !(defined _LP64 || defined _M_X64 || defined _M_ARM64 || defined _M_ALPHA)
+// _LP64 is defined by GCC, others by MSVC
 #define SHIFTED_USE_32BIT
-#endif // ARCH_CPU_32_BITS
+#endif
 
 #ifdef SHIFTED_USE_32BIT
 
--- a/Telegram/gyp/PrecompiledHeader.cmake
+++ b/Telegram/gyp/PrecompiledHeader.cmake
@@ -114,7 +114,7 @@ function(add_precompiled_header _target
       set(_compiler_FLAGS "@${_pch_c_flags_file}")
       add_custom_command(
         OUTPUT "${_output_c}"
-        COMMAND "${CMAKE_C_COMPILER}" ${_compiler_FLAGS} -x c-header -o "${_output_c}" -c "${_pchfile}"
+        COMMAND "${CMAKE_C_COMPILER}" "$(C_DEFINES)" "$(C_INCLUDES)" "$(C_FLAGS)" -x c-header -o "${_output_c}" -c "${_pchfile}"
         DEPENDS "${_pchfile}" "${_pch_c_flags_file}"
         IMPLICIT_DEPENDS C "${_pch_header}"
         COMMENT "Precompiling ${_name} for ${_target} (C)")
@@ -125,7 +125,7 @@ function(add_precompiled_header _target
       set(_compiler_FLAGS "@${_pch_cpp_flags_file}")
       add_custom_command(
         OUTPUT "${_output_cxx}"
-        COMMAND "${CMAKE_CXX_COMPILER}" ${_compiler_FLAGS} -x c++-header -o "${_output_cxx}" -c "${_pchfile}"
+        COMMAND "${CMAKE_CXX_COMPILER}" "$(CXX_DEFINES)" "$(CXX_INCLUDES)" "$(CXX_FLAGS)" -x c++-header -o "${_output_cxx}" -c "${_pchfile}"
         DEPENDS "${_pchfile}" "${_pch_cpp_flags_file}"
         IMPLICIT_DEPENDS CXX "${_pch_header}"
         COMMENT "Precompiling header ${_name} for ${_target} (C++)")
--- a/Telegram/gyp/Telegram.gyp
+++ b/Telegram/gyp/Telegram.gyp
@@ -73,15 +73,11 @@
       'codegen.gyp:codegen_lang',
       'codegen.gyp:codegen_numbers',
       'codegen.gyp:codegen_style',
-      'tests/tests.gyp:tests',
-      'utils.gyp:Updater',
-      '../ThirdParty/libtgvoip/libtgvoip.gyp:libtgvoip',
       'crl.gyp:crl',
       'lib_export.gyp:lib_export',
     ],
 
     'defines': [
-      'AL_LIBTYPE_STATIC',
       'AL_ALEXT_PROTOTYPES',
       'TGVOIP_USE_CXX11_LIB',
       '<!@(python -c "for s in \'<(build_defines)\'.split(\',\'): print(s)")',
@@ -90,19 +86,11 @@
     'include_dirs': [
       '<(src_loc)',
       '<(SHARED_INTERMEDIATE_DIR)',
-      '<(libs_loc)/breakpad/src',
-      '<(libs_loc)/lzma/C',
-      '<(libs_loc)/zlib',
-      '<(libs_loc)/ffmpeg',
-      '<(libs_loc)/openal-soft/include',
-      '<(libs_loc)/opus/include',
-      '<(libs_loc)/range-v3/include',
-      '<(minizip_loc)',
-      '<(sp_media_key_tap_loc)',
       '<(emoji_suggestions_loc)',
-      '<(submodules_loc)/GSL/include',
-      '<(submodules_loc)/variant/include',
-      '<(submodules_loc)/crl/src',
+      '../../debian/crl/src',
+      '/usr/include/minizip',
+      '/usr/include/libtgvoip',
+      '/usr/include/opus',
     ],
     'sources': [
       '<@(qrc_files)',
@@ -132,5 +120,14 @@
         ],
       }],
     ],
+  },{
+    # TODO: Make this target more respectful of the `notest` build profile.
+    # There should be no tests when the default target is executed.
+    'target_name': 'check',
+    'type': 'none',
+    'dependencies': [
+      'Telegram',
+      'tests/tests.gyp:tests',
+    ],
   }],
 }
--- a/Telegram/gyp/common.gypi
+++ b/Telegram/gyp/common.gypi
@@ -91,6 +91,7 @@
 
     'library%': 'static_library',
 
+    'triplet': '<!(dpkg-architecture -q DEB_BUILD_MULTIARCH)',
   },
 
   'configurations': {
--- a/Telegram/gyp/crl.gyp
+++ b/Telegram/gyp/crl.gyp
@@ -28,11 +28,11 @@
       ],
     }]],
     'variables': {
-      'crl_src_loc': '../ThirdParty/crl/src/crl',
+      'crl_src_loc': '../../debian/crl/src/crl',
       'official_build_target%': '',
     },
     'include_dirs': [
-      '../ThirdParty/crl/src',
+      '../../debian/crl/src',
       '../SourceFiles',
     ],
     'sources': [
--- a/Telegram/gyp/lib_export.gyp
+++ b/Telegram/gyp/lib_export.gyp
@@ -48,10 +48,7 @@
     'include_dirs': [
       '<(src_loc)',
       '<(SHARED_INTERMEDIATE_DIR)',
-      '<(libs_loc)/range-v3/include',
-      '<(submodules_loc)/GSL/include',
-      '<(submodules_loc)/variant/include',
-      '<(submodules_loc)/crl/src',
+      '../../debian/crl/src',
     ],
     'sources': [
       '<(src_loc)/export/export_api_wrap.cpp',
--- a/Telegram/gyp/qt.gypi
+++ b/Telegram/gyp/qt.gypi
@@ -14,25 +14,21 @@
               [ 'build_macold', {
                 'qt_version%': '5.3.2',
               }, {
-                'qt_version%': '5.6.2',
+                'qt_version%': '<!(echo /usr/include/<(triplet)/qt5/QtCore/*/ | grep -Po "\d+\.\d+\.\d+")',
               }]
             ],
           },
           'qt_libs': [
-            'qwebp',
-            'Qt5PrintSupport',
-            'Qt5PlatformSupport',
             'Qt5Network',
             'Qt5Widgets',
             'Qt5Gui',
-            'qtharfbuzzng',
           ],
           'qt_version%': '<(qt_version)',
           'conditions': [
             [ 'build_macold', {
               'linux_path_qt%': '/usr/local/macold/Qt-<(qt_version)',
             }, {
-              'linux_path_qt%': '/usr/local/tdesktop/Qt-<(qt_version)',
+              'linux_path_qt%': '/usr/lib/<(triplet)/qt5',
             }]
           ]
         },
@@ -72,32 +68,13 @@
             ],
           }],
           [ 'build_linux', {
-            'qt_lib_prefix': 'lib',
-            'qt_lib_debug_postfix': '.a',
-            'qt_lib_release_postfix': '.a',
+            'qt_lib_prefix': '',
+            'qt_lib_debug_postfix': '',
+            'qt_lib_release_postfix': '',
             'qt_libs': [
-              'qxcb',
-              'Qt5XcbQpa',
-              'qconnmanbearer',
-              'qgenericbearer',
-              'qnmbearer',
               '<@(qt_libs)',
               'Qt5DBus',
               'Qt5Core',
-              'qtpcre',
-              'Xi',
-              'Xext',
-              'Xfixes',
-              'SM',
-              'ICE',
-              'fontconfig',
-              'expat',
-              'freetype',
-              'z',
-              'xcb-shm',
-              'xcb-xfixes',
-              'xcb-render',
-              'xcb-static',
             ],
           }],
         ],
@@ -127,11 +104,6 @@
     # '<!@(python <(DEPTH)/list_sources.py [sources] <(qt_moc_list_sources_arg))'
     # where [sources] contains all your source files
     'qt_moc_list_sources_arg': '--moc-prefix SHARED_INTERMEDIATE_DIR/<(_target_name)/moc/moc_',
-
-    'linux_path_xkbcommon%': '/usr/local',
-    'linux_lib_ssl%': '/usr/local/ssl/lib/libssl.a',
-    'linux_lib_crypto%': '/usr/local/ssl/lib/libcrypto.a',
-    'linux_lib_icu%': 'libicutu.a libicui18n.a libicuuc.a libicudata.a',
   },
 
   'configurations': {
@@ -180,14 +152,14 @@
   },
 
   'include_dirs': [
-    '<(qt_loc)/include',
-    '<(qt_loc)/include/QtCore',
-    '<(qt_loc)/include/QtGui',
-    '<(qt_loc)/include/QtDBus',
-    '<(qt_loc)/include/QtCore/<(qt_version)',
-    '<(qt_loc)/include/QtGui/<(qt_version)',
-    '<(qt_loc)/include/QtCore/<(qt_version)/QtCore',
-    '<(qt_loc)/include/QtGui/<(qt_version)/QtGui',
+    '/usr/include/<(triplet)/qt5',
+    '/usr/include/<(triplet)/qt5/QtCore',
+    '/usr/include/<(triplet)/qt5/QtGui',
+    '/usr/include/<(triplet)/qt5/QtDBus',
+    '/usr/include/<(triplet)/qt5/QtCore/<(qt_version)/',
+    '/usr/include/<(triplet)/qt5/QtGui/<(qt_version)/',
+    '/usr/include/<(triplet)/qt5/QtCore/<(qt_version)/QtCore',
+    '/usr/include/<(triplet)/qt5/QtGui/<(qt_version)/QtGui',
   ],
   'library_dirs': [
     '<(qt_loc)/lib',
@@ -205,24 +177,15 @@
   'conditions': [
     [ 'build_linux', {
       'dependencies': [
-        '<(DEPTH)/linux_glibc_wraps.gyp:linux_glibc_wraps',
       ],
       'library_dirs': [
         '<(qt_loc)/plugins/platforminputcontexts',
       ],
       'libraries': [
-        '<(PRODUCT_DIR)/obj.target/liblinux_glibc_wraps.a',
-        '<(linux_path_xkbcommon)/lib/libxkbcommon.a',
         '<@(qt_libs_release)',
-        '<(linux_lib_ssl)',
-        '<(linux_lib_crypto)',
-        '<!@(python -c "for s in \'<(linux_lib_icu)\'.split(\' \'): print(s)")',
-        '-lxcb',
+        '-lcrypto',
         '-lX11',
-        '-lX11-xcb',
-        '-ldbus-1',
         '-ldl',
-        '-lgthread-2.0',
         '-lglib-2.0',
         '-lpthread',
       ],
@@ -230,7 +193,6 @@
         '<(qt_loc)/mkspecs/linux-g++',
       ],
       'ldflags': [
-        '-static-libstdc++',
         '-pthread',
         '-rdynamic',
       ],
--- a/Telegram/gyp/qt_moc.gypi
+++ b/Telegram/gyp/qt_moc.gypi
@@ -17,6 +17,7 @@
       # Silence "Note: No relevant classes found. No output generated."
       '--no-notes',
 
+      '<!@(echo $CPPFLAGS | grep -Po "[-]([IDU]\s*\S*|E)")',
       '<!@(python -c "for s in \'<@(_defines)\'.split(\' \'): print(\'-D\' + s)")',
       # '<!@(python -c "for s in \'<@(_include_dirs)\'.split(\' \'): print(\'-I\' + s)")',
       '<(RULE_INPUT_PATH)',
--- a/Telegram/gyp/settings_linux.gypi
+++ b/Telegram/gyp/settings_linux.gypi
@@ -11,7 +11,6 @@
         'linux_common_flags': [
           '-pipe',
           '-Wall',
-          '-Werror',
           '-W',
           '-fPIC',
           '-Wno-unused-variable',
@@ -25,7 +24,7 @@
         ],
       },
       'conditions': [
-        [ '"<!(uname -m)" == "x86_64" or "<!(uname -m)" == "aarch64"', {
+        [ '"<!(dpkg-architecture -q DEB_HOST_ARCH_BITS)" == "64"', {
           'defines': [
             'Q_OS_LINUX64',
           ],
@@ -60,7 +59,6 @@
       ],
       'defines': [
         '_REENTRANT',
-        'QT_STATICPLUGIN',
         'QT_PLUGIN',
       ],
       'cflags_c': [
--- a/Telegram/gyp/telegram_linux.gypi
+++ b/Telegram/gyp/telegram_linux.gypi
@@ -43,25 +43,17 @@
       '<(linux_path_breakpad)/lib',
     ],
     'libraries': [
-      'breakpad_client',
-      'composeplatforminputcontextplugin',
-      'ibusplatforminputcontextplugin',
-      'fcitxplatforminputcontextplugin',
-      'himeplatforminputcontextplugin',
-      'liblzma.a',
-      'libopenal.a',
-      'libavformat.a',
-      'libavcodec.a',
-      'libswresample.a',
-      'libswscale.a',
-      'libavutil.a',
-      'libopus.a',
-      'libva-x11.a',
-      'libva-drm.a',
-      'libva.a',
-      'libvdpau.a',
-      'libdrm.a',
-      'libz.a',
+      'lzma',
+      'openal',
+      'avformat',
+      'avcodec',
+      'swresample',
+      'swscale',
+      'avutil',
+      'opus',
+      'z',
+      'minizip',
+      'tgvoip',
 #      '<!(pkg-config 2> /dev/null --libs <@(pkgconfig_libs))',
     ],
     'cflags_cc': [
@@ -69,37 +61,24 @@
       '-Wno-maybe-uninitialized',
     ],
     'ldflags': [
-      '-Wl,-wrap,aligned_alloc',
-      '-Wl,-wrap,secure_getenv',
-      '-Wl,-wrap,clock_gettime',
       '-Wl,--no-as-needed,-lrt',
     ],
     'configurations': {
       'Release': {
         'cflags_c': [
-          '-Ofast',
           '-fno-strict-aliasing',
         ],
         'cflags_cc': [
-          '-Ofast',
           '-fno-strict-aliasing',
         ],
-        'ldflags': [
-          '-Ofast',
-        ],
       },
     },
     'conditions': [
-      [ '"<!(uname -p)" != "x86_64"', {
-        'ldflags': [
-          '-Wl,-wrap,__divmoddi4',
-        ],
-      }], ['not_need_gtk!="True"', {
+      ['not_need_gtk != "True"', {
         'cflags_cc': [
           '<!(pkg-config 2> /dev/null --cflags appindicator-0.1)',
           '<!(pkg-config 2> /dev/null --cflags gtk+-2.0)',
           '<!(pkg-config 2> /dev/null --cflags glib-2.0)',
-          '<!(pkg-config 2> /dev/null --cflags dee-1.0)',
         ],
       }]
     ],
--- a/Telegram/gyp/telegram_sources.txt
+++ b/Telegram/gyp/telegram_sources.txt
@@ -1,6 +1,5 @@
 <(src_loc)/base/algorithm.h
 <(src_loc)/base/assertion.h
-<(src_loc)/base/build_config.h
 <(src_loc)/base/bytes.h
 <(src_loc)/base/flags.h
 <(src_loc)/base/enum_mask.h
@@ -789,7 +788,6 @@
 <(src_loc)/messenger.h
 <(src_loc)/observer_peer.cpp
 <(src_loc)/observer_peer.h
-<(src_loc)/qt_static_plugins.cpp
 <(src_loc)/settings.cpp
 <(src_loc)/settings.h
 <(src_loc)/shortcuts.cpp
@@ -797,14 +795,7 @@
 <(emoji_suggestions_loc)/emoji_suggestions.cpp
 <(emoji_suggestions_loc)/emoji_suggestions.h
 
-platforms: !win
-<(minizip_loc)/crypt.h
-<(minizip_loc)/ioapi.c
-<(minizip_loc)/ioapi.h
-<(minizip_loc)/zip.c
-<(minizip_loc)/zip.h
-<(minizip_loc)/unzip.c
-<(minizip_loc)/unzip.h
+../../debian/qt_functions.cpp
 
 platforms: mac
 <(sp_media_key_tap_loc)/SPMediaKeyTap.m
