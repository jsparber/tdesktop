Description: Fix build for various architectures
Author: Nicholas Guriev <guriev-ns@ya.ru>
Bug: https://github.com/telegramdesktop/tdesktop/issues/3167
Bug-Debian: https://bugs.debian.org/859057
Forwarded: no
Last-Update: 2017-04-19

--- a/Telegram/SourceFiles/config.h
+++ b/Telegram/SourceFiles/config.h
@@ -261,7 +261,7 @@ static const char *ApiHash = "344583e457
 #endif
 
 #if Q_BYTE_ORDER == Q_BIG_ENDIAN
-#error "Only little endian is supported!"
+#warning "Be aware, only little endian is supported!"
 #endif // Q_BYTE_ORDER == Q_BIG_ENDIAN
 
 #ifndef BETA_VERSION_MACRO
--- a/Telegram/SourceFiles/core/basic_types.h
+++ b/Telegram/SourceFiles/core/basic_types.h
@@ -25,12 +25,8 @@ Copyright (c) 2014-2017 John Preston, ht
 #include <memory>
 #include <ctime>
 
-#include "base/build_config.h"
-
 // Custom libc++ build used for old OS X versions already has this.
-#ifndef OS_MAC_OLD
-
-#if defined COMPILER_CLANG || defined COMPILER_GCC
+#if !defined OS_MAC_OLD && (defined __GNUC__ || defined __clang__)
 namespace std {
 
 template <typename T>
@@ -42,9 +38,7 @@ template <typename T>
 void as_const(const T&&) = delete;
 
 } // namespace std
-#endif // COMPILER_CLANG || COMPILER_GCC
-
-#endif // OS_MAC_OLD
+#endif
 
 #include "base/ordered_set.h"
 
@@ -84,3 +78,17 @@ friend Q_DECL_CONSTEXPR QFlags<Flags::en
 Q_DECLARE_FRIEND_INCOMPATIBLE_FLAGS(Flags)
 
 #endif // OS_MAC_OLD
+
+#if defined(__GNUC__) || defined(__clang__)
+#define WARN_UNUSED_RESULT __attribute__((warn_unused_result))
+#else
+#define WARN_UNUSED_RESULT
+#endif
+
+#if defined(__GNUC__)
+#define FORCE_INLINE inline __attribute__((always_inline))
+#elif defined(_MSC_VER)
+#define FORCE_INLINE __forceinline
+#else
+#define FORCE_INLINE inline
+#endif
--- a/Telegram/gyp/telegram_sources.txt
+++ b/Telegram/gyp/telegram_sources.txt
@@ -1,4 +1,3 @@
-<(src_loc)/base/build_config.h
 <(src_loc)/base/lambda.h
 <(src_loc)/base/observer.cpp
 <(src_loc)/base/observer.h
--- a/Telegram/SourceFiles/ui/animation.h
+++ b/Telegram/SourceFiles/ui/animation.h
@@ -171,9 +171,10 @@ FORCE_INLINE int interpolate(int a, int
 	return qRound(a + float64(b - a) * b_ratio);
 }
 
-#ifdef ARCH_CPU_32_BITS
+#if !(defined _LP64 || defined _M_X64 || defined _M_ARM64 || defined _M_ALPHA)
+// _LP64 is defined by GCC, others by MSVC
 #define SHIFTED_USE_32BIT
-#endif // ARCH_CPU_32_BITS
+#endif
 
 #ifdef SHIFTED_USE_32BIT
 
